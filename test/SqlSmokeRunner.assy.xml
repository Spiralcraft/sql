<task:TaskRunner
  xmlns:task="class:/spiralcraft/task/"
  xmlns:stest="class:/spiralcraft/sql/test/"
  xmlns:test="class:/spiralcraft/test/"
  xmlns:query="class:/spiralcraft/data/query/"
  xmlns:dtask="class:/spiralcraft/data/task/"
  xmlns:example="class:/spiralcraft/data/test/example/"
  >
  <service>
    <stest:TestSpace>
    </stest:TestSpace>
  </service>
  
  <chain>
    <test:TestGroup>
      <name>spiralcraft-sql
      </name>
    </test:TestGroup>
    
    <task:Sequence>
      <scenarios>
        <dtask:Fetch>
          <debug>true
          </debug>

          <query>
            <query:Scan>
              <type x="[@example:Customer].type"/>
            </query:Scan>
          </query>
          
          <chain>
            <test:Stub>
              <messageX>""+[example:Customer.list].@size()+" results"
              </messageX>
              <conditionX>[example:Customer.list].@size()==3
              </conditionX>
              <name>Fetch all customers
              </name>
            </test:Stub>
          </chain>
        </dtask:Fetch>
        <dtask:Fetch>
          <debug>true
          </debug>

          <query>
            <query:Scan>
              <type x="[@example:StringNode].type"/>
            </query:Scan>
          </query>
          
          <chain>
            <test:Stub>
              <messageX>""+[example:StringNode.list].@size()+" results"
              </messageX>
              <conditionX>[example:StringNode.list].@size()==0
              </conditionX>
              <name>Fetch all StringNodes
              </name>
            </test:Stub>
          </chain>
        </dtask:Fetch>
      </scenarios>
    </task:Sequence>
  </chain>
  
</task:TaskRunner>