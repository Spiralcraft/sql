show();
typeResolver=spiralcraft.data.TypeResolver.getTypeResolver();

new spiralcraft.data.sax.DataReader().readFromURI
	(URI.create("java:/spiralcraft/sql/test/Test.space.xml")
	,typeResolver.resolve(URI.create("java:/spiralcraft/sql/test/TestSpace"))
  ).toText(" ");
  
  

space=new spiralcraft.data.persist.XmlAssembly
  (URI.create("java:/spiralcraft/sql/test/TestSpace")
  ,URI.create("java:/spiralcraft/sql/test/Test.space.xml")
  ).get();
 
space.register(spiralcraft.registry.Registry.getLocalRoot());
space.initialize();


bq=space.getAll(typeResolver.resolve(URI.create("java:/spiralcraft/data/test/example/Customer")));
bq.execute();


"// Query 1";
query=new spiralcraft.data.persist.XmlBean
  (URI.create("java:/spiralcraft/data/query/Query")
  ,URI.create("java:/spiralcraft/sql/test/1.query.xml")
  ).get();
bq=space.query(query,null);
bq.execute();

"// Query 2";
query=new spiralcraft.data.persist.XmlBean
  (URI.create("java:/spiralcraft/data/query/Query")
  ,URI.create("java:/spiralcraft/sql/test/2.query.xml")
  ).get();
bq=space.query(query,null);
bq.execute();

"// Query 3";
query=new spiralcraft.data.persist.XmlBean
  (URI.create("java:/spiralcraft/data/query/Query")
  ,URI.create("java:/spiralcraft/sql/test/3.query.xml")
  ).get();
bq=space.query(query,null);
bq.execute();

"// Update 1";
customerListType=typeResolver.resolve(URI.create("java:/spiralcraft/data/test/example/Customer.list"));
dataReader=new spiralcraft.data.sax.DataReader();
dataConsumerChain=new spiralcraft.data.util.DebugDataConsumer();
synchronizer=new spiralcraft.data.transport.DataSynchronizer(space,customerListType.getContentType());
dataConsumerChain.setDataConsumer(synchronizer);
dataReader.setDataConsumer(dataConsumerChain);
dataReader.readFromURI
  (URI.create("java:/spiralcraft/data/test/example/Customer.data.xml")
  ,customerListType
  );

