<?xml version="1.1" encoding="UTF-8"?>

<scm:Change.list
  xmlns:scm="class:/spiralcraft/scm/meta/"
  >
  <scm:Change>
    <revision>0.4.17
    </revision>
  
    <authorId>miketoth
    </authorId>
    
    <date>
    </date>

    <detail>

      <scm:Change>
        <revision>-dev34
        </revision>
        
        <notes>
          <scm:Note>Upgrade HSQLDB to 2.7.2
          </scm:Note>
        </notes>
        
      </scm:Change>

      <scm:Change>
        <revision>-dev32
        </revision>
        
        <notes>
          <scm:Note>Log schema name in INFO message for new connections
          </scm:Note>
        </notes>

        <path>source/spiralcraft/sql/SQLUtil.java
        </path>
        
      </scm:Change>

      <scm:Change>
        <revision>-dev32
        </revision>
        
        <notes>
          <scm:Note>Fix exclusion of last field from ad-hoc SQL-to-JSON conversion
          </scm:Note>
        </notes>

        <path>source/spiralcraft/sql/SQLUtil.java
        </path>
        
      </scm:Change>

      <scm:Change>
        <revision>-dev31
        </revision>
        
        <notes>
          <scm:Note>Maintenance utility to run SQL statements and return JSON.
          </scm:Note>
          
        </notes>

        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>data/store/SQLStore.java
          </URI>
          <URI>util/SQLUtil.java
          </URI>
        </resources>
        
      </scm:Change>

      <scm:Change>
        <revision>-dev31
        </revision>
        
        <notes>
          <scm:Note>Don't auto-flatten a field that references the same type as
            the containing type.
          </scm:Note>
          
        </notes>

        <path>source/spiralcraft/sql/data/store/ColumnMapping.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev30
        </revision>
        
        <notes>
          <scm:Note>Add metering support
          </scm:Note>
          
        </notes>

        <path>source/spiralcraft/sql/data/store/SqlStore.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev27
        </revision>
        
        <notes>
          <scm:Note>Add cause to logged exception when update fails
          </scm:Note>
          
        </notes>

        <path>source/spiralcraft/sql/data/store/TableMapping.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev27
        </revision>
        
        <notes>
          <scm:Note>Add hooks for pre and post connection pool initialization
          </scm:Note>
          
        </notes>

        <path>source/spiralcraft/sql/data/store/SqlStore.java
        </path>
      </scm:Change>
      
      <scm:Change>
        <revision>-dev26
        </revision>
        
        <notes>
          <scm:Note>Fix regression where arrays of primitives would not be
            mapped to db fields.
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/data/store/ColumnMapping.java
        </path>

      </scm:Change>

      <scm:Change>
        <revision>-dev25
        </revision>
        
        <notes>
          <scm:Note>Auto-manage non-unique SQL indexes
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>model/Index.java
          </URI>
          <URI>model/Table.java
          </URI>
          <URI>data/store/TableMapping.java
          </URI>
          <URI>ddl/CreateIndexStatement.java
          </URI>
          <URI>ddl/IndexDefinition.java
          </URI>
        </resources>
        
        
      </scm:Change>

      <scm:Change>
        <revision>-dev24
        </revision>
        
        <notes>
          <scm:Note>Fix ClassCast exception in SqlStore.snapshot() when
            base/multi-type accessors are returned as primaryQueryables.
          </scm:Note>
          
        </notes>
        
        <resources>
          <URI>source/spiralcraft/sql/data/store/SqlStore.java
          </URI>
        </resources>
        
        
      </scm:Change>

      <scm:Change>
        <revision>-dev24
        </revision>
        
        <notes>
          <scm:Note>Fix regression- restore support for ad-hoc SQL queries in
            QueryTool (SQL result driven type information)
          </scm:Note>
          
        </notes>
        
        <resources>
          <URI>source/spiralcraft/sql/data/ResultSetTuple.java
          </URI>
        </resources>
        
        
      </scm:Change>

      <scm:Change>
        <revision>-dev23
        </revision>
        
        <notes>
          <scm:Note>Support some corner cases reverse mapping column types.
            Support changing column types in DB.
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>Dialect.java
          </URI>
          <URI>SqlType.java
          </URI>
          <URI>ddl/AlterColumnType.java
          </URI>
          <URI>model/Table.java
          </URI>
          <URI>model/Column.java
          </URI>
          <URI>types/RealAsDoubleType.java
          </URI>
          <URI>vendor/hsqldb/HsqldbDialect.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev22
        </revision>
        
        <notes>
          <scm:Note>Fix NPE when updating table to add a unique key constraint
            that didn't exist previously
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/model
        </path>
        
        <resources>
          <URI>KeyConstraint.java
          </URI>
          <URI>Table.java
          </URI>
        </resources>
      </scm:Change>
      
      <scm:Change>
        <revision>-dev21
        </revision>
        
        <notes>
          <scm:Note>Exclude static fields from persistence
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/data/store
        </path>
        
        <URI>ColumnMapping.java
        </URI>
        <URI>SqlUpdater.java
        </URI>
        <URI>TypeManager.java
        </URI>
      </scm:Change>


      <scm:Change>
        <revision>-dev20
        </revision>
        
        <notes>
          <scm:Note>Constrain log message to debug mode.
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/model/KeyConstraint.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev19
        </revision>
        
        <notes>
          <scm:Note>Support redefinition of primary key by dropping and adding
            the primary key constraint.
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>Dialect.java
          </URI>
          <URI>ddl/DDLStatement.java
          </URI>
          <URI>ddl/DropPrimaryKeyConstraintDefinition.java
          </URI>
          <URI>ddl/DropTableConstraintDefinition.java
          </URI>
          <URI>model/KeyConstraint.java
          </URI>
          <URI>model/Table.java
          </URI>
        </resources>

      </scm:Change>

      <scm:Change>
        <revision>-dev17
        </revision>
        
        <notes>
          <scm:Note>Account for changed data cache interface in spiralcraft.core
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/store/SqlUpdater.java
        </path>

      </scm:Change>

      <scm:Change>
        <revision>-dev16
        </revision>
        
        <notes>
          <scm:Note>Pool statementText to keep memory usage down when query
            is bound multiple times.
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/store/BoundStatement.java
        </path>

      </scm:Change>

      <scm:Change>
        <revision>-dev15
        </revision>
        
        <notes>
          <scm:Note>Fix issue where the remainder of select query that could not
            be further self-factored was ignored, resulting in extra rows
            being returned.
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/data
        </path>
        
        <resources>
          <URI>query/BoundSelection.java
          </URI>
          <URI>store/TableMapping.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev14
        </revision>
        
        <notes>
          <scm:Note>Ensure that all queries return data that is synchronized
            with the cache.
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/data
        </path>
        
        <resources>
          <URI>SerialResultSetCursor.java
          </URI>
          <URI>query/BoundEquiJoin.java
          </URI>
          <URI>query/BoundScan.java
          </URI>
          <URI>query/BoundSelection.java
          </URI>
          <URI>query/BoundSqlQuery.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev13
        </revision>
        
        <notes>
          <scm:Note>Remove extraneous logging
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/data/query/BoundSelection.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev12
        </revision>
        
        <notes>
          <scm:Note>Fix issue where entity attributes were not being read
            and triggers were not being run.
          </scm:Note>
          <scm:Note>Fix issue where calculated fields based on external data
            caused a bind failure on initialization because initial focus did
            not reference a queryable.
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/data/store
        </path>
        
        <resources>
          <URI>SqlStore.java
          </URI>
          <URI>SqlUpdater.java
          </URI>
          <URI>TableMapping.java
          </URI>
        </resources>

      </scm:Change>

      <scm:Change>
        <revision>-dev12
        </revision>
        
        <notes>
          <scm:Note>Fix issue where keys defined in base types were not
            translated into SQL constraints
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/data/store/TableMapping.java
        </path>

      </scm:Change>


      <scm:Change>
        <revision>-dev12
        </revision>
        
        <notes>
          <scm:Note>Fix NPE when there is no parameter/parent Focus for 
            query. 
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/data/query/BoundSqlQuery.java
        </path>

      </scm:Change>

      <scm:Change>
        <revision>-dev12
        </revision>
        
        <notes>
          <scm:Note>Suppress log messages
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>data/ResultSetMapping.java
          </URI>
          <URI>data/store/TypeManager.java
          </URI>
        </resources>

      </scm:Change>

      <scm:Change>
        <revision>-dev11
        </revision>
        
        <notes>
          <scm:Note>Fix issue where scale field of numeric type did not
            make it into the DDL.
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>data/mappers/BigDecimalTypeMapper.java
          </URI>
          <URI>model/Column.java
          </URI>
        </resources>

      </scm:Change>

      <scm:Change>
        <revision>-dev11
        </revision>
        
        <notes>
          <scm:Note>Respect EntityField storeName mappings when naming columns
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/data/store/
        </path>
        
        <resources>
          <URI>ColumnMapping.java
          </URI>
          <URI>SchemaMapping.java
          </URI>
          <URI>SqlStore.java
          </URI>
          <URI>TableMapping.java
          </URI>
          <URI>TypeManager.java
          </URI>
        </resources>

      </scm:Change>

      <scm:Change>
        <revision>-dev11
        </revision>
        
        <notes>
          <scm:Note>Mysql integration
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/vendor/mysql
        </path>
        
        <resources>
          <URI>MysqlAdminSession.java
          </URI>
          <URI>MysqlDialect.java
          </URI>
        </resources>

      </scm:Change>

      <scm:Change>
        <revision>-dev11
        </revision>
        
        <notes>
          <scm:Note>Support databases with no differentiated concept of 
            a "schema"
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql/model/Schema.java
        </path>

      </scm:Change>

      <scm:Change>
        <revision>-dev11
        </revision>
        
        <notes>
          <scm:Note>The Dialect now participates in initializing the
            Connection.
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>Dialect.java
          </URI>
          <URI>data/store/SqlStore.java
          </URI>
          <URI>pool/ConnectionPool.java
          </URI>
          <URI>util/AbstractSqlTool.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev11
        </revision>
        
        <notes>
          <scm:Note>Deal with dialects that require a VARCHAR size by having
            the Dialect participate in the specifyColumn operation
          </scm:Note>
          
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>Dialect.java
          </URI>
          <URI>data/mappers/BigDecimalTypeMapper.java
          </URI>
          <URI>data/mappers/ListTypeMapper.java
          </URI>
          <URI>data/mappers/PrimitiveTypeMapper.java
          </URI>
          <URI>data/mappers/StringTypeMapper.java
          </URI>
          <URI>data/mappers/TypeTypeMapper.java
          </URI>
          <URI>model/Column.java
          </URI>
          <URI>types/ArrayType.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev11
        </revision>
        
        <notes>
          <scm:Note>Add a base HSQLDB SqlStore assembly.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/vendor/hsqldb/BasicEmbeddedStore.assy.xml
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev11
        </revision>
        
        <notes>
          <scm:Note>Store non-transient derived fields
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data/store/SqlUpdater.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev10
        </revision>
        
        <notes>
          <scm:Note>Call preBind() in the base class before binding to
            resolve the Space.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data/store/SqlStore.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev10
        </revision>
        
        <notes>
          <scm:Note>Don't map entities declared as abstract in the schema to
            database tables.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data/store/SchemaMapping.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev9
        </revision>
        
        <notes>
          <scm:Note>Update edit Buffer with a new original when data is written
            to the backing store.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data/store/SqlUpdater.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev9
        </revision>
        
        <notes>
          <scm:Note>Deal with scenario where an exception causes XA driver
            to roll back and forget about the transaction.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data/store/SqlBranch.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev9
        </revision>
        
        <notes>
          <scm:Note>Log applied parameters on exception
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data/store/BoundUpdateStatement.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev8
        </revision>
        
        <notes>
          <scm:Note>Add caching functionality (currently non-transactional)
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data
        </path>
        
        <resources>
          <URI>query/BoundEquiJoin.java
          </URI>
          <URI>query/BoundSqlQuery.java
          </URI>
          <URI>store/BoundQueryStatement.java
          </URI>
          <URI>store/BoundStatement.java
          </URI>
          <URI>store/BoundUpdateStatement.java
          </URI>
          <URI>store/SqlUpdater.java
          </URI>
          <URI>store/TableMapping.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev7
        </revision>
        
        <notes>
          <scm:Note>Add toString() for DML constructs for easier debugging
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/dml
        </path>
        
        <resources>
          <URI>BooleanFactor.java
          </URI>
          <URI>BooleanTerm.java
          </URI>
          <URI>SelectStatement.java
          </URI>
          <URI>SqlParameterReference.java
          </URI>
          <URI>UpdateStatement.java
          </URI>
          <URI>WhereClause.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev7
        </revision>
        
        <notes>
          <scm:Note>SqlStore.restore() restores a SQL database from a set of 
            XML files 
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/SqlStore.java
        </path>
        
      </scm:Change>
      
      <scm:Change>
        <revision>-dev7
        </revision>
        
        <notes>
          <scm:Note>Refactor how result set mappings are represented in order
            to avoid excessive recomputation. 
          </scm:Note>
          <scm:Note>Streamline statement execution logging w/parameters
          </scm:Note>
          <scm:Note>Fix issues solving parameterized queries against base types
            that span multiple stores.
          </scm:Note>
          <scm:Note>Get Select criteria analysis and parameter binding in-sync
             with standard usage
          </scm:Note>
          <scm:Note>Add EquiJoin binding.
          </scm:Note>
          <scm:Note>Fix issues mapping complex types where subtypes hide 
            fields in base-types
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>data/ResultColumnMapping.java
          </URI>
          <URI>data/ResultMapping.java
          </URI>
          <URI>data/ResultSetMapping.java
          </URI>
          <URI>data/ResultSetTuple.java
          </URI>
          <URI>data/SerialResultSetCursor.java
          </URI>
          <URI>data/TableMapping.java
          </URI>
          <URI>data/query/BoundEquiJoin.java
          </URI>
          <URI>data/query/BoundScan.java
          </URI>
          <URI>data/query/BoundSelection.java
          </URI>
          <URI>data/query/BoundSqlQuery.java
          </URI>
          <URI>data/store/CriteriaTranslator.java
          </URI>
          <URI>data/store/BoundQueryStatement.java
          </URI>
          <URI>data/store/BoundStatement.java
          </URI>
          <URI>data/store/BoundUpdateStatement.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev7
        </revision>
        
        <notes>
          <scm:Note>Handle data that contains Type references
          </scm:Note>

        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>converters/TypeConverter.java
          </URI>
          <URI>converters/TypeRefConverter.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev7
        </revision>
        
        <notes>
          <scm:Note>Add dialect-specific conversion for when HSQLDB returns 
            java.lang.Double for JDBC REAL when a Float is expected in the data
            model.
          </scm:Note>

        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>Dialect.java
          </URI>
          <URI>converters/FloatToSqlDoubleConverter.java
          </URI>
          <URI>data/mappers/PrimitiveTypeMapper.java
          </URI>
          <URI>types/RealAsDoubleType.java
          </URI>
          <URI>types/RealType.java
          </URI>
          <URI>vendor/hsqldb/HsqldbDialect.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev6
        </revision>
        
        <notes>
          <scm:Note>Changes to support JDBC XA mode and 2-phase commit for
            SQL Stores
          </scm:Note>

        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>data/store/SqlBranch.java
          </URI>
          <URI>data/store/SqlResourceManager.java
          </URI>
          <URI>data/store/SqlStore.java
          </URI>
          <URI>data/store/SqlStoreConnection.java
          </URI>
          <URI>data/store/TransactionScopedConnection.java
          </URI>
          <URI>jdbc/ConnectionWrapper.java
          </URI>
          <URI>jdbc/XATransactionalConnection.java
          </URI>
          <URI>pool/ConnectionFactory.java
          </URI>
          <URI>pool/ConnectionPool.java
          </URI>
          <URI>util/Loader.java
          </URI>
          <URI>util/SQLUtil.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev5
        </revision>
        
        <notes>
          <scm:Note>Fix issue where the "WHERE" keyword was included twice,
            resulting in a SQL syntax error.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/dml/DeleteStatement.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev5
        </revision>
        
        <notes>
          <scm:Note>Debugging and exception handling enhancements
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>data/store/BoundStatement.java
          </URI>
          <URI>data/store/BoundUpdateStatement.java
          </URI>
          <URI>data/store/SqlBranch.java
          </URI>
          <URI>data/store/SqlResourceManager.java
          </URI>
          <URI>data/store/TableMapping.java
          </URI>
          <URI>model/Column.java
          </URI>
          <URI>model/MetaData.java
          </URI>
          <URI>model/Schema.java
          </URI>
          <URI>model/Table.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev5
        </revision>
        
        <notes>
          <scm:Note>Fix issue where non-persistent fields would break the
            column mapping logic in ResultSetTuple.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data/ResultSetTuple.java
        </path>
      </scm:Change>
    
      <scm:Change>
        <revision>-dev5
        </revision>
        
        <notes>
          <scm:Note>Enhancements and fixes to persist arrays and embedded
            data objects
          </scm:Note>
          <scm:Note>Add a default type mapping for a java.util.List
          </scm:Note>
          <scm:Note>Converters now provide array conversion instances and 
            store their default Java class so the
            appropriately typed array can be instantiated.
          </scm:Note>
          <scm:Note>Mappers now provide array mapping instances
          </scm:Note>
          <scm:Note>Add better support for fields that are not persisted.
          </scm:Note>
          <scm:Note>Support for SQL Arrays
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>SqlType.java
          </URI>
          <URI>converters/Converter.java
          </URI>
          <URI>converters/BigDecimalConverter.java
          </URI>
          <URI>converters/ByteConverter.java
          </URI>
          <URI>converters/DateConverter.java
          </URI>
          <URI>converters/DoubleConverter.java
          </URI>
          <URI>converters/FloatConverter.java
          </URI>
          <URI>converters/IntegerConverter.java
          </URI>
          <URI>converters/LongConverter.java
          </URI>
          <URI>converters/ShortConverter.java
          </URI>
          <URI>converters/StringifyConverter.java
          </URI>
          <URI>converters/TimeConverter.java
          </URI>
          <URI>converters/TimestampConverter.java
          </URI>
          <URI>converters/TypeRefConverter.java
          </URI>
          <URI>converters/VarcharConverter.java
          </URI>
          <URI>data/mappers/ListTypeMapper.java
          </URI>
          <URI>data/mappers/TypeMapper.java
          </URI>
          <URI>data/store/ColumnMapping.java
          </URI>
          <URI>data/store/TableMapping.java
          </URI>
          <URI>data/store/SqlUpdater.java
          </URI>
          <URI>data/store/TypeMapper.java
          </URI>
          <URI>ddl/ArrayDataType.java
          </URI>
          <URI>ddl/DataType.java
          </URI>
          <URI>sql/types/ArrayType.java
          </URI>
        </resources>
        
      </scm:Change>

      <scm:Change>
        <revision>-dev4
        </revision>
        
        <notes>
          <scm:Note>Handle spiralcraft.data.Type references properly by
            storing them as URI strings
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>converters/TypeRefConverter.java
          </URI>
          <URI>mappers/TypeMapper.java
          </URI>
          <URI>mappers/TypeTypeMapper.java
          </URI>
          <URI>data/store/ColumnMapping.java
          </URI>
        </resources>
        
      </scm:Change>
          
      <scm:Change>
        <revision>-dev3
        </revision>
        
        <notes>
          <scm:Note>Refactoring- remove Focus arg for Store.getUpdater()
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data/store/SqlStore.java
        </path>
        
      </scm:Change>

      <scm:Change>
        <revision>-dev2
        </revision>
        
        <notes>
          <scm:Note>ConnectionFactory can now throw a SQLException
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql
        </path>
        
        <resources>
          <URI>data/store/SqlStoreConnection.java
          </URI>
          <URI>sql/pool/ConnectionFactory.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev1
        </revision>
        
        <notes>
          <scm:Note>dataSourceX property allows for dynamic DataSource
            resolution.
          </scm:Note>
          <scm:Note>Sequence generator is now derived from 
            AbstractStoreSequence in core.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data/store/SqlStore.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev1
        </revision>
        
        <notes>
          <scm:Note>Quote identifiers in "SET" clauses
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/dml/SetClause.java
        </path>
      </scm:Change>

      <scm:Change>
        <revision>-dev1
        </revision>
        
        <notes>
          <scm:Note>Clean up connection allocation and statement pooling
            functionality
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/
        </path>
        
        <resources>
          <URI>jdbc/CachedPreparedStatement.java
          </URI>
          <URI>jdbc/PreparedStatementWrapper.java
          </URI>
          <URI>jdbc/StatementCachingConnection.java
          </URI>
          <URI>jdbc/StatementWrapper.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev1
        </revision>
        
        <notes>
          <scm:Note>Complete implementation of bidirectional type mapping
            and support for inheritance and hierarchy when reading result 
            sets.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/
        </path>
        
        <resources>
          <URI>data/ResultMapping.java
          </URI>
          <URI>data/ResultSetTuple.java
          </URI>
          <URI>data/SerialResultSetCursor.java
          </URI>
          <URI>data/mappers/PrimitiveTypeMapper.java
          </URI>
          <URI>data/mappers/TypeMapper.java
          </URI>
          <URI>data/query/BoundScan.java
          </URI>
          <URI>data/store/BoundQueryStatement.java
          </URI>
          <URI>data/store/BoundStatement.java
          </URI>
          <URI>data/store/ColumnMapping.java
          </URI>
          <URI>data/store/CriteriaTranslator.java
          </URI>
          <URI>data/store/ParameterTag.java
          </URI>
          <URI>data/store/ToSqlChannel.java
          </URI>
          <URI>dml/SqlParameterReference.java
          </URI>
          <URI>types/RealType.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev1
        </revision>
        
        <notes>
          <scm:Note>Converter is now an abstract class in preparation for
            future enhancements.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/converters
        </path>
        
        <resources>
          <URI>BigDecimalConverter.java
          </URI>
          <URI>ByteConverter.java
          </URI>
          <URI>Converter.java
          </URI>
          <URI>DateConverter.java
          </URI>
          <URI>DoubleConverter.java
          </URI>
          <URI>FloatConverter.java
          </URI>
          <URI>IntegerConverter.java
          </URI>
          <URI>LongConverter.java
          </URI>
          <URI>ShortConverter.java
          </URI>
          <URI>StringifyConverter.java
          </URI>
          <URI>TimeConverter.java
          </URI>
          <URI>TimestampConverter.java
          </URI>
          <URI>VarcharConverter.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev1
        </revision>
        
        <notes>
          <scm:Note>Remove need for explicit TypeManager configuration
          </scm:Note>
          <scm:Note>Non-transient fields of non-primitive types will be
            auto-flattened.
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/data/store
        </path>
        
        <resources>
          <URI>ColumnMapping.java
          </URI>
          <URI>SchemaMapping.java
          </URI>
          <URI>SqlStore.java
          </URI>
          <URI>TypeManager.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <revision>-dev1
        </revision>
        
        <notes>
          <scm:Note>Incorporate HSQLDB as standard for smoke testing
          </scm:Note>
          <scm:Note>Update for API changes in core
          </scm:Note>
        </notes>
        
        <path>source/spiralcraft/sql/
        </path>
        
        <resources>
          <URI>Dialect.java
          </URI>
          <URI>SqlFragment.java
          </URI>
          <URI>SqlType.java
          </URI>
          <URI>data/query/BoundSqlQuery.java
          </URI>
          <URI>data/store/ColumnMapping.java
          </URI>
          <URI>data/store/CriteriaTranslator.java
          </URI>
          <URI>data/store/SqlStore.java
          </URI>
          <URI>data/store/SchemaMapping.java
          </URI>
          <URI>data/store/TableMapping.java
          </URI>
          <URI>data/store/TypeManager.java
          </URI>
          <URI>sql/ddl/CreateSchemaStatement.java
          </URI>
          <URI>sql/ddl/CreateTableStatement.java
          </URI>
          <URI>sql/ddl/DataType.java
          </URI>
          <URI>sql/jdbc/ConnectionWrapper.java
          </URI>
          <URI>sql/model/Column.java
          </URI>
          <URI>sql/model/KeyConstraint.java
          </URI>
          <URI>sql/model/MetaData.java
          </URI>
          <URI>sql/model/Schema.java
          </URI>
          <URI>sql/model/Table.java
          </URI>
          <URI>sql/pool/ConnectionPool.java
          </URI>
          <URI>sql/util/QueryTool.java
          </URI>
          <URI>sql/util/ResourceDataSource.java
          </URI>
          <URI>sql/util/SQLUtil.java
          </URI>
          <URI>sql/vendor/hsqldb/HsqldbAdminSession.java
          </URI>
          <URI>sql/vendor/hsqldb/HsqldbDialect.java
          </URI>
        </resources>
      </scm:Change>
    </detail>
  </scm:Change>
  
  <scm:Change>
    <revision>0.4.13
    </revision>
  
    <authorId>miketoth
    </authorId>
    
    <date>2010-02-19
    </date>
    
    <detail>
      <scm:Change>
        <notes>
          <scm:Note>
            Factor for changes to base abstractions of spiralcraft.data.access
              package.
          </scm:Note>
        
        </notes>
        
        <path>source/spiralcraft/sql/
        </path>
        
        <resources>
          <URI>data/store/SchemaMapping.java
          </URI>
          <URI>data/store/SqlStore.java
          </URI>
          <URI>data/store/SqlStoreConnection.java
          </URI>
          <URI>data/store/SqlUpdater.java
          </URI>
          <URI>data/store/TableMapping.java
          </URI>
          <URI>data/store/TypeManager.java
          </URI>
          <URI>data/store/Updater.java
          </URI>
          <URI>pool/ConnectionFactory.java
          </URI>
          <URI>pool/ConnectionPool.java
          </URI>
        </resources>
      
      </scm:Change>
    
    </detail>
    
  </scm:Change>
  
  <scm:Change>
    <revision>0.4.5
    </revision>
  
    <authorId>miketoth
    </authorId>
    
    <date>2010-02-19
    </date>
      
    <notes>
      <scm:Note>Refresh for spiralcraft-core 0.4.5 re. updated
        AbstractTuple signature, spiralcraft.lang AST changes, and
        Store.snapshot(), Store.update() functionality.
      </scm:Note>
      <scm:Note>Ignore non-persistent fields and keys
      </scm:Note>
      <scm:Note>Sort out Schema TableMapping override behavior
      </scm:Note>
      <scm:Note>Make identifiers quoted
      </scm:Note>
    </notes>
    
    <path>source/spiralcraft/sql/
    </path>
    
    <resources>
      <URI>data/ResultSetTuple.java
      </URI>
      <URI>data/store/CriteriaTranslator.java
      </URI>
      <URI>data/store/SqlStore.java
      </URI>
      <URI>data/store/TableMapping.java
      </URI>
      <URI>data/store/TypeManager.java
      </URI>
      <URI>ddl/UniqueConstraintDefinition.java
      </URI>
      <URI>ddl/TableElementList.java
      </URI>
      <URI>model/KeyConstraint.java
      </URI>
      <URI>model/Table.java
      </URI>
      <URI>util/Loader.java
      </URI>
    
    </resources>
  </scm:Change>
  
  <scm:Change>
    <revision>0.3.1
    </revision>
    
    <authorId>miketoth
    </authorId>
    
    <notes>
      <scm:Note>Change management system testing
      </scm:Note>
      <scm:Note>Refresh for production use of spiralcraft.data.access.Store
        with latest spiralcraft-core.
      </scm:Note>
    </notes>
    
    <detail>
      <scm:Change>
        <date>2009-04-28
        </date>
        
        <scm:Note>Updated connection management logic
        </scm:Note>
        
        <path>/source/spiralcraft/sql/
        </path>
        
        <resources>
          <URI>Dialect.java
          </URI>
          <URI>SqlType.java
          </URI>
          <URI>data/mappers/PrimitiveTypeMapper.java
          </URI>
          <URI>data/SerialResultSetCursor.java
          </URI>
          <URI>data/store/BoundQueryStatement.java
          </URI>
          <URI>data/store/BoundUpdateStatement.java
          </URI>
          <URI>data/store/SqlBranch.java
          </URI>
          <URI>data/store/SqlResourceManager.java
          </URI>
          <URI>data/store/SqlStore.java
          </URI>
          <URI>data/store/TypeManager.java
          </URI>
          <URI>data/store/Updater.java
          </URI>
          <URI>data/store/ColumnMapping.java
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
        <date>2009-04-28
        </date>
        
        <scm:Note>Adapted to spiralcraft.data.access.Cursor interface and
          design contract change.
        </scm:Note>
        
        <path>/source/spiralcraft/sql/
        </path>
        
        <resources>
          <URI>data/SerialResultSetCursor.java
          </URI>
          <URI>util/AbstractSqlTool.java
          </URI>
        </resources>
      </scm:Change>
      
      <scm:Change>
        <date>2009-04-27
        </date>
        
        <path>/source/spiralcraft/sql/util/
        </path>
        
        <resources>
          <URI>Loader.java
          </URI>
        </resources>
        
        <notes>
          <scm:Note>Support bean/assy based config (don't require parameters)
          </scm:Note>
          <scm:Note>Use quoted identifiers
          </scm:Note>
        </notes>
      </scm:Change>

      <scm:Change>
        <date>2009-04-27
        </date>
        
        <path>/source/spiralcraft/sql/model/
        </path>
        
        <resources>
          <URI>Column.java
          </URI>
          <URI>Schema.java
          </URI>
        </resources>
        
        <notes>
          <scm:Note>Debugging, logging, null checks
          </scm:Note>
        
        </notes>
      </scm:Change>

      <scm:Change>
        <date>2009-04-16
        </date>
        
        <path>/source/spiralcraft/sql/data/ResultSetScheme
        </path>
        
        <notes>
          <scm:Note>Convert field names provided by JDBC to valid 
            spiralcraft.lang identifiers
          </scm:Note>
        
        </notes>
      </scm:Change>

      <scm:Change>
        <date>2009-04-16
        </date>
        
        <path>/source/spiralcraft/sql/util
        </path>
        
        <notes>
          <scm:Note>Refresh for updates to spiralcraft.data.flatfile and for
            use in testing and automated setup.
          </scm:Note>
        
        </notes>
      </scm:Change>
    </detail>
  </scm:Change>
</scm:Change.list>